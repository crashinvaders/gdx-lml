apply plugin: 'gwt'
apply plugin: 'war'

sourceCompatibility = 1.8
targetCompatibility = 1.8
//compileJava.options.incremental = true

sourceSets.main.java.srcDirs = [ "src/" ]

gwt {
    gwtVersion = gwtFrameworkVersion // Should match the version used for building the GWT backend. See gradle.properties.
    maxHeapSize = "1G" // Default 256m is not enough for gwt compiler. GWT is HUNGRY
    minHeapSize = "1G"

    src = files(file("src/")) // Needs to be in front of "modules" below.
    modules 'com.github.czyzby.GdxDefinition'
    devModules 'com.github.czyzby.GdxDefinitionSuperdev'
    project.webAppDirName = 'webapp'

    compiler {
        strict = true
        disableCastChecking = true
    }
}

//TODO Find HttpFileServer replacement (use Gretty from Liftoff GWT module template).
//task draftRun(type: JettyRunWar) {
//    dependsOn draftWar
//    dependsOn.remove('war')
//    webApp=draftWar.archivePath
//    daemon=true
//}
//
//task superDev(type: de.richsource.gradle.plugins.gwt.GwtSuperDev) {
//    dependsOn draftRun
//    doFirst {
//    	gwt.modules = gwt.devModules
//    }
//}

task dist(dependsOn: [clean, compileGwt]) {
    doLast {
        file("build/dist").mkdirs()
        copy {
            from "build/gwt/out"
            into "build/dist"
        }
        copy {
            from "webapp"
            into "build/dist"
            }
        copy {
            from "war"
            into "build/dist"
        }
    }
}

draftWar {
   from "war"
}

task addSource {
    doLast {
        sourceSets.main.compileClasspath += files(project(':core').sourceSets.main.allJava.srcDirs)
    }
}

tasks.compileGwt.dependsOn(addSource)
tasks.draftCompileGwt.dependsOn(addSource)
